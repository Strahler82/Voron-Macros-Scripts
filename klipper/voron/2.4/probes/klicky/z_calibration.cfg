[z_calibration]
probe_nozzle_x: 232
probe_nozzle_y: 350

probe_switch_x: 229
probe_switch_y: 329

switch_offset: 0.48

max_deviation: 1.0

probing_first_fast: true

start_gcode: Dock_Probe_Unlock
before_switch_gcode: Attach_Probe
end_gcode: Dock_Probe


# using a value other than 0 seems to confuse CALIBRATE_Z 
# on multiple BED_MESH_CLEAR + QGL + BED_MESH_CALIBRATE cycles
#
# also note, this overrides any SAVE_CONFIG in printer.cfg
[stepper_z]
position_endstop = 0.0


[gcode_macro AUTO_CALIBRATE_Z]
description: klicky auto-z routine
gcode:
  M118 calculating z offset...
  STATUS_AUTO_Z_START
  DOCK_PROBE
  BRUSH TIMES=5
  CALIBRATE_Z
  GET_POSITION
  Z_SANITY_CHECK
  DISPLAY_Z CONSOLE=1
  STATUS_AUTO_Z_END


[gcode_macro DISPLAY_Z]
gcode:
  {% set console  = params.CONSOLE|default(0) %}
  {% set msg = "z offset: %0.2f" % (printer.gcode_move.homing_origin.z) %}
  M117 { msg }
  {% if console %}
    { action_respond_info(msg) }
  {% endif %}


[gcode_macro Z_SANITY_CHECK]
variable_skip: False
gcode:

  {% if skip %}
    { action_respond_info('skipping Z_SANITY_CHECK') }
  {% else %}

    {% set offset = printer.gcode_move.homing_origin.z %}

    {% if offset > -0.6 %}
      { action_raise_error("z offset %0.2f too low - aborting" % (offset)) }
    {% elif offset < -0.76 %}
      { action_raise_error("z offset %0.2f too high - aborting" % (offset)) }
    {% endif %}

    SKIP_Z_SANITY_CHECK SKIP=False
  {% endif %}



[gcode_macro SKIP_Z_SANITY_CHECK]
description: skip z sanity checks
gcode:
  {% set skip = params.SKIP|default(False, True)|int %}

  SET_GCODE_VARIABLE MACRO=Z_SANITY_CHECK VARIABLE=skip VALUE={skip}

  { action_respond_info('Z_SANITY_CHECK = %d' % (skip)) }


[gcode_macro LOCATE_SWITCH]
gcode:
  {% set x  = printer['configfile'].config['z_calibration']["probe_switch_x"]|float %}
  {% set y  = printer['configfile'].config['z_calibration']["probe_switch_y"]|float %}

  {% set msg = "switch body located at X%0.1f Y%0.1f" % (x,y) %}

  { action_respond_info(msg) }

  CHECK_QGL

  Attach_Probe

  SAVE_GCODE_STATE NAME=__locate
  G1 X{x} Y{y} Z10 F3000
  G1 Z8 F50
  RESTORE_GCODE_STATE NAME=__locate


[gcode_macro LOCATE_NOZZLE]
gcode:
  {% set x  = printer['configfile'].config['z_calibration']["probe_nozzle_x"]|float %}
  {% set y  = printer['configfile'].config['z_calibration']["probe_nozzle_y"]|float %}

  {% set msg = "switch body located at X%0.1f Y%0.1f" % (x,y) %}

  { action_respond_info(msg) }

  CHECK_QGL

  Dock_Probe

  SAVE_GCODE_STATE NAME=__locate
  G1 X{x} Y{y} Z10 F3000
  G1 Z8 F50
  RESTORE_GCODE_STATE NAME=__locate
