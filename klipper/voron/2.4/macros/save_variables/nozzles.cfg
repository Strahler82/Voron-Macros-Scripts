[gcode_macro STORE_NOZZLE]
description: store nozzle pa, smooth, and scv values
gcode:

  {% set nozzle = params.NOZZLE | default("") | string | lower %}
  {% set desc = params.DESCRIPTION | default("") | string %}
  {% set size = params.SIZE | default("0.04") | string %}
  {% set pa = params.PA | default("") | string %}
  {% set smooth = params.SMOOTH | default("") | string %}
  {% set scv = params.SCV | default("") | string %}

  {% set svv = printer.save_variables.variables %}

  {% if not nozzle %}
    RAISE_ERROR MSG="no nozzle specified?"
  {% endif %}

  {% set key = 'stored-nozzle-%s' % (nozzle) %}

  {% set settings = [size,pa,smooth,scv] %}

  {% if not desc %}
    {% set desc = '%smm %s nozzle' % (size, nozzle) %}
  {% endif %}

  {% set v = 'desc:%s,size:%s,pa:%s,smooth:%s,scv:%s' % (desc, size, pa, smooth, scv) %}

  SAVE_VARIABLE VARIABLE={key} VALUE="'{v}'"

  DISPLAY_SAVE_VARIABLE KEY={key}


[gcode_macro SET_NOZZLE]
description: retrieve nozzle from storage and set pa, smooth, and scv
gcode:

  {% set nozzle = params.NOZZLE | default("") | string | lower %}

  {% if not nozzle %}
    RAISE_ERROR MSG="no nozzle specified?"
  {% endif %}

  M118 loading settings for {nozzle}...

  {% set key = 'stored-nozzle-%s' % (nozzle) %}

  {% set svv = printer.save_variables.variables %}

  {% set stored = svv[key] %}

  {% set n = {} %}
  {% for i in stored.split(',') %}
    {% set k,v = i.split(':') %}
    {% if n.update({k:v}) %}{% endif %}  # nasty... but there's no other way
  {% endfor %}

  {% if n.pa %}
    M118 setting pa to {n.pa}...
    SET_PRESSURE_ADVANCE ADVANCE={n.pa|float}
  {% endif %}

  {% if n.smooth %}
    M118 setting smooth to {n.smooth}...
    SET_PRESSURE_ADVANCE SMOOTH_TIME={n.smooth|float}
  {% endif %}

  {% if n.scv %}
    M118 setting scv to {n.scv}...
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={n.scv|float}
  {% endif %}

  SAVE_VARIABLE VARIABLE=current-nozzle VALUE="'{nozzle}'"

  M118 finished settings for {nozzle} ({n.desc})


[gcode_macro RESTORE_CURRENT_NOZZLE]
description: call SET_NOZZLE for current nozzle
gcode:

  {% set svv = printer.save_variables.variables %}

  {% set current = svv['current-nozzle'] %}

  M118 restoring current nozzle {current}

  SET_NOZZLE NOZZLE={current}

