# based (extremely, extremely heavily) on https://discord.com/channels/460117602945990666/460172848565190667/890777587507396648
# major kudos to @VintageGriffin for taking the time to distill the floating discord and github knowledge into a functional macro

# Allows finer grained acceleration control for different types of print moves than those provided by SuperSlicer.
#
# Usage: 
# Make sure dynamic acceleration control under "Print settings" -> "Acceleration control" is disabled (e.g all values set to 0, even the greyed out ones).
# Setting "Machine limits" under "Printer settings" does not interfere with this macro.
# Paste the following into the "Printer settings" -> "Extrusion role change G-code" section.
#
#   SET_PRINT_MOVE_ACCEL MOVE=[extrusion_role] LAYER_NUM=[layer_num]
#
# Known issues:
# All "service" moves like travel, wipe, z-hop and internal moves between individual extrusions will be done with the acceleration of the print move that preceeded them.
# There is currently no known way to specify travel move acceleration separately from others (e.g as in SuperSlicer's "travel" acceleration) in a way that would not interfere
# or reset the values for the given print moves almost immediately.

[gcode_macro SET_PRINT_MOVE_ACCEL]
gcode:
  # configuration for acceleration values for different print moves
  #
  # for reference, a run of the voron cube at .2mm layers will have counts similar to:
  #  982 ExternalPerimeter
  #  804 OverhangPerimeter
  #  743 InternalInfill
  #  548 GapFill
  #  404 Perimeter
  #  389 SolidInfill
  #   10 BridgeInfill
  #    7 TopSolidInfill
  #    6 FirstLayer
  #    1 Skirt

  {% set accelerations = ({

    # custom move types
    'Default'                 : 3000,  # default acceleration value if the print move is not provided or not recognized
    'FirstLayer'              : 1500,  # all print moves on first layer will be done with this acceleration

    # move types from SuperSlicer
    'ExternalPerimeter'       : 1500,  # slow down here to get less surface artefacts
    'ThinWall'                : 1500,  # sections of walls one perimeter thick
    'Perimeter'               : 3000,

    'OverhangPerimeter'       : 1500,  # overhangs, and perimeters on external bridges
    'BridgeInfill'            : 3000,  # external (on actual bridges) and internal (supporting bridging layer above sparse infill)
 
    'TopSolidInfill'          : 1500,  # solid infill on top layer. slow down here to get less surface artefacts
    'SolidInfill'             : 7000,  # solid internal infill
    'InternalInfill'          : 7000,  # sparse internal infill
    'GapFill'                 : 3000,  # space constrained between two outer extrusions, larger than one but thinner than two extrusion widths
  
    'Skirt'                   : 3000,
    'SupportMaterial'         : 3000,
    'SupportMaterialInterface': 3000,
    'WipeTower'               : 3000
  }) %}


  # the rest is implementation

  {% set move = params.MOVE|string %}
  {% set layer = params.LAYER_NUM|default(0)|int %}  # layers start at 1
  {% set verbose = params.VERBOSE|default(1)|int %}

  {% if layer == 1 %}
    # override all accelerations for first layer

    {% if verbose != 0 %}
      {action_respond_info('SET_PRINT_MOVE_ACCEL: Overriding print move "%s" to use FirstLayer accelerations.' % (move))}
    {% endif %}

    {% set move = 'FirstLayer' %}
  {% endif %}

  {% if move not in accelerations %}
    # use the default acceleration for unknown print moves, or when print move was not provided
    {% if verbose != 0 %}
      {action_respond_info('SET_PRINT_MOVE_ACCEL: Unknown print move "%s", or print move not provided. Using default acceleration.' % (move))}
    {% endif %}

    {% set move = 'Default' %}
  {% endif %}

  {% set accel = accelerations[move] %}
  {% set accel_to_decel = (accel / 2)|int %}    # half the acceleration value as per Klipper docs

  {% if verbose != 0 %}
    {action_respond_info('SET_PRINT_MOVE_ACCEL: Changing acceleration for print move "%s" at layer %d to accel: %d, accel_to_decel: %d' % (move, layer, accel, accel_to_decel))}
  {% endif %}

  SET_VELOCITY_LIMIT ACCEL={accel} ACCEL_TO_DECEL={accel_to_decel}
