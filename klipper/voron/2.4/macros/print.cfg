[gcode_macro PRINT_START]
description: custom start of print routine
gcode:
  {% set BED = params.BED | int %}
  {% set HOTEND = params.HOTEND | int %}
  {% set FILAMENT = params.FILAMENT | default("ABS") %}
  {% set MESH = params.MESH | default("") %}
  {% set CHAMBER = params.CHAMBER | default(False, True) | int %}

  { action_respond_info("target bed temp:%d" % (BED)) }
  { action_respond_info("target hotend temp:%d" % (HOTEND)) }
  { action_respond_info("filament: %s" % (FILAMENT)) }
  { action_respond_info("mesh: %s" % (MESH)) }
  { action_respond_info("chamber: %s" % (CHAMBER)) }

  M140 S{BED}
  M104 S{HOTEND}

  {% if FILAMENT in ["ABS", "PC"] %}
    EXHAUST_FAN_ON

    CONVECTION_START

    {% set CHAMBER = True %}
  {% endif %}

  M190 S{BED}
  M109 S{HOTEND}

  {% if CHAMBER %}
    CHAMBER_WAIT
  {% else %}
    SKIP_EXHAUST_FAN
  {% endif %}

  M107

  BRUSH

  GENERATE_MESH MESH={MESH}

  AUTO_CALIBRATE_Z

  ENABLE_FILAMENT_SENSOR

  STATUS_PRINTING

  PURGE_LINE

  G90


[gcode_macro PRINT_END]
description: custom end of print routine
gcode:
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-10.0 F3600                ; retract filament

  COOLDOWN
  SAFE_Z HOP=50
  PARK_FRONT
  DISABLE_FILAMENT_SENSOR

  {% set msg = "PRINT_END: %s complete" % (printer.print_stats.filename.split('/')[-1]) %}
  NOTIFY MSG="{msg}"

  M117

  CLEANUP


[gcode_macro PURGE_LINE]
description: draw purge line
gcode:
  G92 E0
  CHECK_HOMED
  G1 X5 Y20 Z0.3 F5000.0
  G1 X5 Y250.0 Z0.3 F1500.0 E15
  G1 X5.4 Y250.0 Z0.3 F5000.0
  G1 X5.4 Y20 Z0.3 F1500.0 E30
  G1 Z2.0 F3000
  G1 X6 Y20 Z0.3 F5000.0
  G92 E0
  G1 F2400 E-1


[gcode_macro CANCEL_PRINT]
description: cancel print
rename_existing: BASE_CANCEL_PRINT
gcode:
  COOLDOWN
  PARK
  DISABLE_FILAMENT_SENSOR
  M117
  { action_respond_info("print stopped") }
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT
  STATUS_OFF
  { action_respond_info("printer reset") }


# Pause and park toolhead at front center. Z hop by 10mm.
# adapted from https://github.com/AndrewEllis93/v2.247_backup_klipper_config/blob/master/macros.cfg
[gcode_macro PAUSE]
description: pause print
rename_existing: BASE_PAUSE
gcode:
  {% set z = params.Z|default(20)|int %}
  {% set hours = params.HOURS|default(12)|int %}

  {% if printer['pause_resume'].is_paused|int == 0 %}

    { action_respond_info("pausing print...") }

    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}

    SAVE_GCODE_STATE NAME=PAUSE

    BASE_PAUSE

    SAFE_Z HOP={z}

    SAVE_GCODE_STATE NAME=PAUSEPARK

    PARK_FRONT

    M104 S0

    DISABLE_FILAMENT_SENSOR

    SET_IDLE_TIMEOUT TIMEOUT={ 60 * 60 * hours }

    SET_EXHAUST_FAN_TIMER

    STATUS_PAUSED
  {% endif %}


# adapted from https://github.com/AndrewEllis93/v2.247_backup_klipper_config/blob/master/macros.cfg
[gcode_macro RESUME]
description: resume print after pause
rename_existing: BASE_RESUME
variable_etemp: 0
gcode:

  { action_respond_info("resuming print") }

  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

  {% if etemp > 0 %}
    EXHAUST_FAN_ON
    M109 S{etemp|int}
  {% endif %}

  G91
  G1 E-1 F3600

  RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=450

  G91
  G1 E1 F1800

  RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=450

  BASE_RESUME

  ENABLE_FILAMENT_SENSOR

  STATUS_PRINTING


[gcode_macro SENSOR_DISABLED_RESUME]
description: resume print after pause with filament sensor disabled
gcode:
    RESUME
    DISABLE_FILAMENT_SENSOR
