[gcode_macro PRINT_START]
gcode:
  {% set BED = params.BED | int %}
  {% set HOTEND = params.HOTEND | int %}
  {% set FILAMENT = params.FILAMENT | default("ABS") %}
  {% set MESH = params.MESH | default("") %}

  { action_respond_info("target bed temp:%d" % (BED)) }
  { action_respond_info("target hotend temp:%d" % (HOTEND)) }
  { action_respond_info("filament: %s" % (FILAMENT)) }
  { action_respond_info("mesh: %s" % (MESH)) }

  CONVECTION_START

  M140 S{BED}
  M104 S{HOTEND}

  {% if "ABS" in FILAMENT %}
    EXHAUST_FAN_ON
    { action_respond_info("waiting for chamber to warm up...") }
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM=40
  {% endif %}

  M190 S{BED}
  M109 S{HOTEND}

  M107

  BRUSH

  {% if "FULL" in MESH %}
    FULL_BED_MESH
  {% elif "FAST" in MESH %}
    FAST_BED_MESH
  {% elif "EXTREME" in MESH %}
    EXTREME_BED_MESH
  {% else %}
    BED_MESH
  {% endif %}

  PURGE_LINE

  G90                            ; absolute positioning

  ENABLE_FILAMENT_SENSOR


[gcode_macro PRINT_END]
gcode:
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-10.0 F3600                ; retract filament
  G91                            ; relative positioning
  G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing

  COOLDOWN
  PARK
  DISABLE_FILAMENT_SENSOR

  {% set msg = "PRINT_END: %s complete" % (printer.print_stats.filename.split('/')[-1]) %}
  NOTIFY MSG="{msg}"

  M117


[gcode_macro PURGE_LINE]
gcode:
  G92 E0
  CHECK_HOMED
  G1 Z2.0 F20000
  G1 X5 Y20 Z0.3 F5000.0
  G1 X5 Y250.0 Z0.3 F1500.0 E15
  G1 X5.4 Y250.0 Z0.3 F5000.0
  G1 X5.4 Y20 Z0.3 F1500.0 E30
  G1 Z2.0 F3000
  G1 X6 Y20 Z0.3 F5000.0
  G92 E0
  G1 F2400 E-1


[gcode_macro STOP_PRINT]
gcode:
  CANCEL_PRINT
  COOLDOWN
  PARK
  M117
  { action_respond_info("print stopped") }
[gcode_macro FILAMENT_OVERRIDES]
gcode:
  {% set MATERIAL = params.MATERIAL | default("ABS") %}
  {% set BRAND = params.BRAND | default("Default") %}
  {% set COLOR = params.COLOR | default("Black") %}

  {% if 'Default' in BRAND %}

  {% elif 'Paramount' in BRAND %}

  {% endif %}


# Pause and park toolhead at front center. Z hop by 10mm.
# from https://github.com/AndrewEllis93/v2.247_backup_klipper_config/blob/master/macros.cfg
[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {% set z = params.Z|default(10)|int %}
  {% set hours = params.HOURS|default(12)|int %}

  {% if printer['pause_resume'].is_paused|int == 0 %}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}

    DISABLE_FILAMENT_SENSOR

    SAVE_GCODE_STATE NAME=PAUSE

    BASE_PAUSE

    {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}
      G91
      G1 Z{z} F900
    {% else %}
      { action_respond_info("Pause zhop exceeds maximum Z height.") }
      SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
    {% endif %}

    G90

    G1 XG0 X{printer.toolhead.axis_maximum.x/2} YG0 Y{printer.toolhead.axis_minimum.y+10} F19500

    SAVE_GCODE_STATE NAME=PAUSEPARK

    M104 S0

    SET_IDLE_TIMEOUT TIMEOUT={ 60 * 60 * hours }
    SET_EXHAUST_FAN_TIMER
  {% endif %}


# Return Z hop back down 10mm, prime nozzle, resume print.
# from https://github.com/AndrewEllis93/v2.247_backup_klipper_config/blob/master/macros.cfg
[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
  {% set e = params.E|default(2.5)|int %}

  ENABLE_FILAMENT_SENSOR

  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

  {% if etemp > 0 %}
    M109 S{etemp|int}
  {% endif %}

  RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=450

  G91
  M83

  {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}												
    G1 Z{zhop * -1} E{e} F900
  {% else %}
    G1 Z{zhop * -1} F900
  {% endif %}

  RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=450

  BASE_RESUME
