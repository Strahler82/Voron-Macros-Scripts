[gcode_macro PRINT_START]
description: custom start of print routine
gcode:
  {% set BED = params.BED | int %}
  {% set HOTEND = params.HOTEND | int %}
  {% set FILAMENT = params.FILAMENT | default("ABS") %}
  {% set MESH = params.MESH | default("") %}
  {% set CHAMBER = params.CHAMBER | default(False, True) | int %}
  {% set EXTRUDER = params.EXTRUDER | default(0, True) | int %}

  M117 starting...

  M118 { "target bed temp:%d" % (BED) }
  M118 { "target hotend temp:%d" % (HOTEND) }
  M118 { "filament: %s" % (FILAMENT) }
  M118 { "mesh: %s" % (MESH) }
  M118 { "chamber: %s" % (CHAMBER) }

  M140 S{BED}
  M104 S{HOTEND}

  CHECK_HOMED

  DOCK_PROBE

  CENTER

  STATUS_PREHEAT

  {% if FILAMENT in ["ABS", "PC"] %}
    {% set CHAMBER = True %}
  {% endif %}

  {% if CHAMBER %}
    CONVECTION_START

    CHAMBER_WAIT

    EXHAUST_FAN_ON
  {% else %}
    EXHAUST_FAN_OFF
    SKIP_EXHAUST_FAN   # for resume
  {% endif %}

  M190 S{BED}
  M109 S{HOTEND}

  SET_IDLE_TIMEOUT TIMEOUT=60     # protect the probe against errors that halt the print

  M107

  GENERATE_MESH MESH={MESH}

  AUTO_CALIBRATE_Z

  {% if printer["gcode_macro _ERCF_PAUSE"] %}
    {% if printer["gcode_macro ERCF_HOME"].home == -1 %}
      ERCF_HOME
    {% endif %}
    SET_GCODE_VARIABLE MACRO=_ERCF_PAUSE VARIABLE=extruder_temp VALUE={HOTEND}
    M118 { "ercf extruder: %i" % (EXTRUDER) }
    G1 X5 Y20 Z5.0 F5000.0
    _ERCF_CHANGE_TOOL_STANDALONE TOOL={EXTRUDER}
  {% endif %}

  ENABLE_FILAMENT_SENSOR

  PAUSE_UNLOCK

  SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

  STATUS_PRINTING

  PURGE_LINE

  G90


[gcode_macro SKIP_EXTRUDER_COOLDOWN_ON_PAUSE]
description: skip extruder cooldown on PAUSE
gcode:
  {% set skip = params.SKIP|default(True, True)|int %}

  SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=skip_cooldown VALUE={skip}

  M118 { 'SKIP_EXTRUDER_COOLDOWN_ON_PAUSE = %d' % (skip) }


[gcode_macro SKIP_PREFLIGHT]
description: skip preflight qgl, mesh, auto z, and chamber
gcode:
  SKIP_MESH
  SKIP_CHAMBER_WAIT
  SKIP_AUTO_Z_SANITY_CHECK
  SKIP_AUTO_CALIBRATE_Z


[gcode_macro PRINT_END]
description: custom end of print routine
gcode:
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-10.0 F3600                ; retract filament

  COOLDOWN
  SAFE_Z HOP=50
  PARK
  DISABLE_FILAMENT_SENSOR

  {% set msg = "PRINT_END: %s complete" % (printer.print_stats.filename.split('/')[-1]) %}
  NOTIFY MSG="{msg}"

  M117

  CLEANUP


[gcode_macro PURGE_LINE]
description: draw purge line
gcode:
  G92 E0
  CHECK_HOMED
  G1 X5 Y20 Z0.3 F5000.0
  G1 X5 Y250.0 Z0.3 F1500.0 E15
  G1 X5.4 Y250.0 Z0.3 F5000.0
  G1 X5.4 Y20 Z0.3 F1500.0 E30
  G1 Z2.0 F3000
  G1 X6 Y20 Z0.3 F5000.0
  G92 E0
  G1 E-1.0 F2400


[gcode_macro CANCEL_PRINT]
description: cancel print
rename_existing: CORE_CANCEL_PRINT
gcode:
  M118 canceling print
  TURN_OFF_HEATERS
  M107
  SET_EXHAUST_FAN_TIMER
  SAFE_Z HOP=50
  PARK
  M117
  M118 print stopped
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  CORE_CANCEL_PRINT
  CLEANUP
  STATUS_OFF
  PAUSE_UNLOCK
  M118 printer reset


# adapted from https://github.com/AndrewEllis93/v2.247_backup_klipper_config/blob/master/macros.cfg
[gcode_macro PAUSE]
description: pause print
rename_existing: CORE_PAUSE
variable_skip_cooldown: False
variable_lock: False
gcode:
  {% set z = params.Z|default(50)|int %}
  {% set hours = params.HOURS|default(12)|int %}

  {% if printer['pause_resume'].is_paused|int == 0 %}
    M118 print is paused.  calling custom pause routine...
  {% else %}
    M118 called pause without being paused?
  {% endif %}


  {% if lock %}
    M118 print already paused - preventing multiple gcode save states...
  {% else %}

    NOTIFY MSG="pausing print..."

    {% set pos = printer.toolhead.position %}
    M118 pausing print at { "X%-6.3f Y%-6.3f Z%-4.1f" % (pos.x, pos.y, pos.z) }

    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=fan VALUE={printer.fan.speed}
    SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=exhaust VALUE={printer['fan_generic exhaust_fan'].speed}

    G90 # protect against bad actors, like ercf, who change the state of the printer before calling pause...

    SAVE_GCODE_STATE NAME=MYPAUSE

    M118 calling CORE_PAUSE...

    CORE_PAUSE

    M118 CORE_PAUSE complete

    SAFE_Z HOP={z}

    SAVE_GCODE_STATE NAME=MYPAUSEPARK

    PARK_FRONT

    {% if skip_cooldown %}
      M118 skipping cooldown...
    {% else %}
      M118 extruder cooling down...
      M104 S0
      M107
    {% endif %}

    DISABLE_FILAMENT_SENSOR

    SET_IDLE_TIMEOUT TIMEOUT={ 60 * 60 * hours }

    SET_EXHAUST_FAN_TIMER

    M118 pause routine complete

    STATUS_PAUSED

    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=lock VALUE=True
  {% endif %}


[gcode_macro PAUSE_UNLOCK]
description: resume print after pause with filament sensor disabled
gcode:
    SET_GCODE_VARIABLE MACRO=PAUSE VARIABLE=lock VALUE=False


# adapted from https://github.com/AndrewEllis93/v2.247_backup_klipper_config/blob/master/macros.cfg
[gcode_macro RESUME]
description: resume print after pause
rename_existing: CORE_RESUME
variable_etemp: 0
variable_fan: 0
variable_exhaust: 0
gcode:

  {% if printer["gcode_macro _ERCF_PAUSE"] and printer["gcode_macro _ERCF_PAUSE"].is_paused|int != 0 %}
    M118 ercf locked!  ERCF_UNLOCK, fix stuff, RESUME
  {% else %}

    M118 resuming print...

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}

    {% if etemp > 0 %}
      M118 restoring extruder temperature to {etemp|int}
      M109 S{etemp|int}

      G91
      M83
      G1 E-1 F3600
    {% endif %}

    {% if fan > 0 %}
      M118 restoring fan to {'%d' % (fan * 255)}
      M106 S{'%d' % (fan * 255)}
    {% endif %}

    {% if exhaust > 0 %}
      EXHAUST_FAN_ON
    {% endif %}

    RESTORE_GCODE_STATE NAME=MYPAUSEPARK MOVE=1 MOVE_SPEED=450

    RESTORE_GCODE_STATE NAME=MYPAUSE MOVE=1 MOVE_SPEED=450

    ENABLE_FILAMENT_SENSOR

    M118 custom resume complete, calling CORE_RESUME...

    CORE_RESUME

    PAUSE_UNLOCK

    M118 resume routine complete

    STATUS_PRINTING
  {% endif %}


[gcode_macro SENSOR_DISABLED_RESUME]
description: resume print after pause with filament sensor disabled
gcode:
    RESUME
    DISABLE_FILAMENT_SENSOR


#[gcode_macro REPRINT_LAST]
#description: reprint last gcode file
#variable_file: ""
#gcode:
#    {% if file %}
#      M118 sending SDCARD_PRINT_FILE { file }...
#
#      SDCARD_PRINT_FILE { file }
#    {% else %}
#      M118 no last file to reprint...
#    {% endif %}
