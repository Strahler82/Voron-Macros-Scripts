[gcode_macro ADXL_PREFLIGHT]
description: adxl preflight
gcode:
  CHECK_HOMED
  _CHECK_STEPPER_FANS_DISABLED
  SET_IDLE_TIMEOUT TIMEOUT={ 60 * 60 }
  CHECK_QGL
  STATUS_OFF
  CENTER
  ADXL_QUERY
  M400
  STATUS_OK


[gcode_macro ADXL_QUERY]
description: adxl query
gcode:
  ACCELEROMETER_QUERY
  MEASURE_AXES_NOISE 


[gcode_macro ADXL_TEST_X]
description: measure resonance on x
gcode:
  ADXL_PREFLIGHT
  STATUS_OFF
  #TEST_RESONANCES AXIS=X OUTPUT=raw_data
  AXES_SHAPER_CALIBRATION AXIS=X
  M400
  STATUS_OK


[gcode_macro ADXL_TEST_Y]
description: measure resonance on y
gcode:
  ADXL_PREFLIGHT
  STATUS_OFF
  #TEST_RESONANCES AXIS=Y OUTPUT=raw_data
  AXES_SHAPER_CALIBRATION AXIS=Y
  M400
  STATUS_OK


[gcode_macro ADXL_GOTO_150]
description: position for 150mm 100hz test
gcode:
  STATUS_OFF
  CHECK_HOMED
  CHECK_QGL
  _CHECK_STEPPER_FANS_DISABLED
  G90
  G0 X173 Y110 Z30 F20000
  M400
  STATUS_OK


[gcode_macro ADXL_TEST_BELTS]
description: measure both axes for belt tension
gcode:
  ADXL_PREFLIGHT
  STATUS_OFF
  BELTS_SHAPER_CALIBRATION
  #ADXL_TEST_B
  #ADXL_TEST_A
  M400
  STATUS_OK


[gcode_macro ADXL_TEST_B]
description: measure B axis
gcode:
  ADXL_PREFLIGHT
  STATUS_OFF
  M118 measuring B (front left -> back right)...
  TEST_RESONANCES AXIS=1,1 OUTPUT=raw_data NAME=B
  M400
  STATUS_OK

[gcode_macro ADXL_TEST_A]
description: measure A axis
gcode:
  ADXL_PREFLIGHT
  STATUS_OFF
  M118 measuring A (front right -> back left)...
  TEST_RESONANCES AXIS=1,-1 OUTPUT=raw_data NAME=A
  M400
  STATUS_OK


[gcode_macro ADXL_VIBRATIONS_CALIBRATION]
description: run vibration calibration routine
gcode:
  ADXL_PREFLIGHT
  STATUS_OFF
  CHECK_HOMED
  _CHECK_STEPPER_FANS_DISABLED
  CHECK_QGL
  M118 measuring xy and ab vibrations at accel 1500, 40-150 mm/s
  VIBRATIONS_CALIBRATION DIRECTION="ABXY" TRAVEL_SPEED=300 SIZE=100 ACCEL=1500 MIN_SPEED=40 MAX_SPEED=150
  CENTER
  M400
  STATUS_OK


[gcode_macro DISABLE_PRESSURE_ADVANCE]
description: disable pressure advance and smooth time
gcode:
  SET_PRESSURE_ADVANCE ADVANCE=0 SMOOTH_TIME=0


[gcode_macro _CHECK_STEPPER_FANS_DISABLED]
description: make sure stepper fans are off
gcode:
  {% set fan = printer['controller_fan stepper_fan'] %}
  {% if fan and fan.speed %}
    RAISE_ERROR MSG="stepper fans not disabled"
  {% endif %}

