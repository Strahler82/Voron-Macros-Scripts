[gcode_macro TUNING_TOWER]
rename_existing: CORE_TUNING_TOWER
gcode:

  M118 overriding TUNING_TOWER...

  {% set command = params.COMMAND %}

  _RESET_TUNING_TOWER

  SET_GCODE_VARIABLE MACRO=_TUNING_TOWER_CALLBACK VARIABLE=command VALUE='"{command}"'

  UPDATE_DELAYED_GCODE ID=_POLL_TUNING_TOWER DURATION=30

  CORE_TUNING_TOWER { rawparams } COMMAND=_TUNING_TOWER_CALLBACK


[gcode_macro _TUNING_TOWER_CALLBACK]
variable_command: "M118 ENOCOMMAND"
variable_step: 0
gcode:

  {% set command = printer["gcode_macro _TUNING_TOWER_CALLBACK"].command | default("M118 ENOCOMMAND") %}

  { command } { rawparams }

  _TUNING_TOWER_STEP


[gcode_macro _TUNING_TOWER_START]
gcode:
  {% set temp = printer.extruder.target %}
  {% set pa = printer.extruder.pressure_advance %}
  {% set smooth = printer.extruder.smooth_time %}
  {% set scv = printer.toolhead.square_corner_velocity %}
  {% set accel = printer.toolhead.max_accel %}

  {% set shaper = printer["gcode_macro RESTORE_INPUT_SHAPER"].shaper %}

  {% set msg = "start: pa %s, smooth %s, scv %s, accel %s, temp %s, shaper %s" % (pa, smooth, scv, accel, temp, shaper) %}

  SET_GCODE_VARIABLE MACRO=_TUNING_TOWER_END VARIABLE=output VALUE='"{msg}"'

  M118 TUNING_TOWER { msg }


[gcode_macro _TUNING_TOWER_END]
variable_output: "ENOOUTPUT"
gcode:

  {% for step in output.split('^') %}
    M118 TUNING_TOWER {step}
  {% endfor %}


[gcode_macro _TUNING_TOWER_STEP]
gcode:
  {% set temp = printer.extruder.target %}
  {% set pa = printer.extruder.pressure_advance %}
  {% set smooth = printer.extruder.smooth_time %}
  {% set scv = printer.toolhead.square_corner_velocity %}
  {% set accel = printer.toolhead.max_accel %}

  {% set step = printer["gcode_macro _TUNING_TOWER_CALLBACK"].step %}

  {% if step < 1 %}
    _TUNING_TOWER_START
    SET_GCODE_VARIABLE MACRO=_TUNING_TOWER_CALLBACK VARIABLE=step VALUE=2
  {% else %}
    {% set msg = "step %s: pa %s, smooth %s, scv %s, accel %s, temp %s" % (step, pa, smooth, scv, accel, temp) %}

    {% set output = "%s^%s" % (printer["gcode_macro _TUNING_TOWER_END"].output, msg) %}

    SET_GCODE_VARIABLE MACRO=_TUNING_TOWER_END VARIABLE=output VALUE='"{output}"'
    SET_GCODE_VARIABLE MACRO=_TUNING_TOWER_CALLBACK VARIABLE=step VALUE={step+1}

    M118 TUNING_TOWER { msg }
  {% endif %}


[delayed_gcode _POLL_TUNING_TOWER]
initial_duration: 0
gcode:
  {% if 'Printing' in printer.idle_timeout.state %}
    M118 still printing...
    UPDATE_DELAYED_GCODE ID=_POLL_TUNING_TOWER DURATION=60
  {% else %}
    M118 summarizing tuning tower...
    UPDATE_DELAYED_GCODE ID=_POLL_TUNING_TOWER DURATION=0
    _TUNING_TOWER_END
    _RESET_TUNING_TOWER
  {% endif %}
    

[gcode_macro _RESET_TUNING_TOWER]
gcode:
  UPDATE_DELAYED_GCODE ID=_POLL_TUNING_TOWER DURATION=0
  M118 resetting TUNING_TOWER variables...
  SET_GCODE_VARIABLE MACRO=_TUNING_TOWER_CALLBACK VARIABLE=command VALUE='"M118 ENOCOMMAND"'
  SET_GCODE_VARIABLE MACRO=_TUNING_TOWER_CALLBACK VARIABLE=step VALUE=0
  SET_GCODE_VARIABLE MACRO=_TUNING_TOWER_END VARIABLE=output VALUE='"ENOOUTPUT"'
  M118 reset complete


