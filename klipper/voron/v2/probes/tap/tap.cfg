[delayed_gcode SET_TAP_OFFSET]
initial_duration: 2
gcode:

  {% set OFFSET = 1.42 | float %}

  SET_GCODE_OFFSET Z=0.0
  SET_GCODE_OFFSET Z_ADJUST={OFFSET}
  DISPLAY_Z

  SKIP_PURGE_LINE


[stepper_z]
endstop_pin: probe:z_virtual_endstop
position_min: -5


[safe_z_home]
home_xy_position:172.5,172.5
speed:100
z_hop:10


[quad_gantry_level]
horizontal_move_z: 8
retry_tolerance: 0.004

[bed_mesh]
horizontal_move_z: 3


[probe]
pin: PA3
x_offset: 0
y_offset: 0
z_offset: 0

speed: 3
lift_speed: 10
sample_retract_dist: 2.0

samples: 3
samples_result: median
samples_tolerance: 0.002
samples_tolerance_retries: 3

deactivate_on_each_sample: False

activate_gcode:
  {% set PROBE_TEMP = 150 | int %}

  _TAP_CHECK_TARGET_TEMP PROBE_TEMP={PROBE_TEMP}
  _TAP_CHECK_ACTUAL_TEMP PROBE_TEMP={PROBE_TEMP}

deactivate_gcode:
  _TAP_RESTORE_TARGET_TEMP

[gcode_macro _TAP_CHECK_TARGET_TEMP]
gcode:
  {% set PROBE_TEMP = params.PROBE_TEMP | default(150) | int %}
  {% set TARGET_TEMP = printer.extruder.target | int %}

  UPDATE_DELAYED_GCODE ID=DELAYED_TAP_RESTORE_TARGET_TEMP DURATION=0

  {% if TARGET_TEMP > PROBE_TEMP %}
    RESPOND MSG="{ 'extruder target %d too high, lowering target to %d' % (TARGET_TEMP, PROBE_TEMP) }" TYPE=error
    #M118 { 'extruder target %d too high, lowering target to %d' % (TARGET_TEMP, PROBE_TEMP) }
    SET_GCODE_VARIABLE MACRO=_TAP_RESTORE_TARGET_TEMP VARIABLE=target VALUE={TARGET_TEMP}
    M104 S{ PROBE_TEMP }
  {% endif %}

[gcode_macro _TAP_CHECK_ACTUAL_TEMP]
gcode:
  {% set PROBE_TEMP = params.PROBE_TEMP | default(150) | int %}
  {% set ACTUAL_TEMP = printer.extruder.temperature %}
  {% set MAX_TEMP = PROBE_TEMP + 2 | int %}

  {% if ACTUAL_TEMP > MAX_TEMP %}
    RESPOND MSG="{ 'extruder temperature %.1f too high, cooling to %d...' % (ACTUAL_TEMP, PROBE_TEMP) }" TYPE=error
    #M118 { 'extruder temperature %.1f too high, cooling to %d...' % (ACTUAL_TEMP, PROBE_TEMP) }
    {% set fan = printer.fan.speed %}
    M106 S255
    TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={PROBE_TEMP}
    M106 S{'%d' % (fan * 255)}
  {% endif %}


[gcode_macro _TAP_RESTORE_TARGET_TEMP]
variable_target: 0
gcode:
  {% if target %}
    UPDATE_DELAYED_GCODE ID=DELAYED_TAP_RESTORE_TARGET_TEMP DURATION=10
  {% endif %}

[delayed_gcode DELAYED_TAP_RESTORE_TARGET_TEMP]
initial_duration: 0
gcode:

  {% set target = printer['gcode_macro _TAP_RESTORE_TARGET_TEMP']['target'] | int %}

  RESPOND MSG="{ 'restoring original extruder target temp %d' % (target) }" TYPE=error

  M104 S{ target }

  SET_GCODE_VARIABLE MACRO=_TAP_RESTORE_TARGET_TEMP VARIABLE=target VALUE=0


# overrides to do things I usually forget...

[gcode_macro PROBE_CALIBRATE]
rename_existing: CORE_PROBE_CALIBRATE
gcode:
  SKIP_QGL SKIP=False
  QGL
  G28
  CENTER
  CORE_PROBE_CALIBRATE {rawparams}


[gcode_macro PROBE_ACCURACY]
rename_existing: CORE_PROBE_ACCURACY
gcode:
  CORE_PROBE_ACCURACY {rawparams}
  CENTER


# no-ops required so tap plays nice with existing macros during testing...

[gcode_macro AUTO_CALIBRATE_Z]
description: no-op 
gcode:
  #M118 skipping AUTO_CALIBRATE_Z with tap...

[gcode_macro DOCK_PROBE]
description: no-op
gcode:
  #M118 DOCK_PROBE no-op

[gcode_macro SKIP_AUTO_CALIBRATE_Z]
description: no-op
gcode:
  #M118 SKIP_AUTO_CALIBRATE_Z no-op

[gcode_macro SKIP_AUTO_Z_SANITY_CHECK]
description: no-op
gcode:
  #M118 SKIP_AUTO_Z_SANITY_CHECK no-op

[gcode_macro STORE_Z_OFFSET]
description: no-op
gcode:
  #M118 SKIP_AUTO_Z_SANITY_CHECK no-op
