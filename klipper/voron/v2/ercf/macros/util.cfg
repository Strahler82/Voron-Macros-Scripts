[gcode_macro ERCF_ATTEMPT_RECOVER]
description: attempt to recover
gcode:
  {% set tool = params.TOOL | default(printer['gcode_macro CHANGE_TOOL'].tool, True) | int %}

  {% if printer["gcode_macro _ERCF_PAUSE"].is_paused %}
    {% if printer["gcode_macro _AUTO_RECOVER_LOCK"].lock|int == 0 %}
      M118 attempting recover...
      {% if printer.extruder.temperature < printer["gcode_macro _ERCF_VAR"].extruder_eject_temp %}
        M118 waiting for extruder to heat up...
        M109 S{printer["gcode_macro _ERCF_VAR"].extruder_eject_temp}
      {% endif %}
      M118 recovering T{tool}
      ERCF_GOTO_LOAD_POSITION
      ERCF_UNLOCK
      ERCF_EJECT
      _RECOVER_1 TOOL={tool}
      _RECOVER_2 TOOL={tool}
      _RECOVER_3 TOOL={tool}
    {% else %}
      M118 autorecover locked - no recover attempted
    {% endif %}
  {% else %}
    M118 ercf not paused - no recover attempted
  {% endif %}

[gcode_macro _RECOVER_1]
gcode:
  {% if printer["gcode_macro _ERCF_PAUSE"].is_paused|int == 0 %}
    ERCF_HOME
  {% else %}
    M118 recover eject failed
  {% endif %}

[gcode_macro _RECOVER_2]
gcode:
  {% set tool = params.TOOL | int %}
  {% if printer["gcode_macro _ERCF_PAUSE"].is_paused|int == 0 %}
    T{tool}
  {% else %}
    M118 recover home failed
  {% endif %}

[gcode_macro _RECOVER_3]
gcode:
  {% if printer["gcode_macro _ERCF_PAUSE"].is_paused|int == 0 %}
    M118 recover successful - ok to RESUME
    RESUME
    _AUTO_RECOVER_UNLOCK
  {% else %}
    M118 recover load failed
  {% endif %}


[delayed_gcode ERCF_AUTO_RECOVER]
initial_duration: 0
gcode:

  {% if printer["gcode_macro _ERCF_PAUSE"].is_paused %}
    {% if printer["gcode_macro _AUTO_RECOVER_LOCK"].lock|int == 0 %}
      _AUTO_RECOVER_LOCK
      ERCF_ATTEMPT_RECOVER
    {% else %}
      M118 locked - skipping autorecover attempt
    {% endif %}
  {% endif %}

  UPDATE_DELAYED_GCODE ID=ERCF_AUTO_RECOVER DURATION={printer["gcode_macro ERCF_AUTO_RECOVER_ON"].duration}


[gcode_macro _AUTO_RECOVER_UNLOCK]
gcode:
  SET_GCODE_VARIABLE MACRO=_AUTO_RECOVER_LOCK VARIABLE=lock VALUE=0
  M118 autorecover unlocked

[gcode_macro _AUTO_RECOVER_LOCK]
variable_lock: 1
gcode:
  SET_GCODE_VARIABLE MACRO=_AUTO_RECOVER_LOCK VARIABLE=lock VALUE=1
  M118 autorecover locked


[gcode_macro ERCF_AUTO_RECOVER_ON]
variable_duration: 60
gcode:
  _AUTO_RECOVER_UNLOCK
  UPDATE_DELAYED_GCODE ID=ERCF_AUTO_RECOVER DURATION={duration}
  M118 autorecover on

[gcode_macro ERCF_AUTO_RECOVER_OFF]
gcode:
  _AUTO_RECOVER_LOCK
  UPDATE_DELAYED_GCODE ID=ERCF_AUTO_RECOVER DURATION=0
  M118 autorecover off


[gcode_macro ERCF_PRELOADED_RECOVER]
description: if the right filament is already in the toolhead we can finalize the ERCF and start back up
gcode:
  {% set tool = params.TOOL | default(printer['gcode_macro CHANGE_TOOL'].tool, True) | int %}

  {% if printer["gcode_macro _ERCF_PAUSE"].is_paused %}
    {% if printer['filament_switch_sensor toolhead_sensor'].filament_detected %}
      M118 recovering preloaded T{tool}
      _ERCF_SERVO_UP
      SET_GCODE_VARIABLE MACRO=_ERCF_SELECT_TOOL VARIABLE=tool_selected VALUE=-1
      SET_GCODE_VARIABLE MACRO=_ERCF_SELECT_TOOL VARIABLE=color_selected VALUE={tool}
      ERCF_SET_STEPS RATIO=1.0
      G92 E0
      G90
      RESUME
    {% else %}
      M118 no filament detected
    {% endif %}
  {% else %}
    M118 ercf not paused - skipping preload recover
  {% endif %}

