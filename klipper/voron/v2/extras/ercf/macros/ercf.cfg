# so, apparently you can't rename_existing for your own macros, so load up the other ones
[include ../../../macros/filament.cfg]
[include ../../../macros/print.cfg]


[delayed_gcode INITIALIZE_ERCF]
initial_duration: 1
gcode:
  ERCF_HOME
  _ERCF_SELECT_TOOL TOOL=8
  _ERCF_SELECT_TOOL TOOL=0
  ERCF_HOME


[gcode_macro ERCF_CHANGE_TOOL]
description: wrap toolchange in some helpers...
gcode:
  {% set from = params.FROM | int %}
  {% set to = params.TO | int %}
  {% set init = params.INIT | default(False, True) | int %}

  SAVE_GCODE_STATE NAME=__toolchange

  # move to location on plate that yields the straightest bowden path through the lgx
  SAFE_Z HOP=2
  G0 X1 Y175 F500

  {% if init %}
    M118 ERCF: standalone toolchange to T[to}
    _ERCF_CHANGE_TOOL_STANDALONE TOOL={to}
  {% else %}
    M118 ERCF: T{from} -> T[to}
    T{to}
  {% endif %}
  
  RESTORE_GCODE_STATE NAME=__toolchange MOVE=1 MOVE_SPEED=500

  # bad ercf, not restoring old pressure advance values...
  RESTORE_PRESSURE_ADVANCE


[gcode_macro PRINT_END]
description: custom end of print routine
gcode:
  M400
  G92 E0

  ERCF_EJECT

  COOLDOWN
  SAFE_Z HOP=50
  PARK

  NOTIFY_PRINT_COMPLETE

  M117

  CLEANUP

  RESTORE_CURRENT_NOZZLE


[gcode_macro PURGE_LINE]
description: draw purge line
gcode:
  {% set x = params.X_START|default(5) | float %}
  {% set end = params.Y_END|default(250) | float %}
  {% set passes = params.PASSES|default(2) %}

  G92 E0

  G1 X1 Y1 Z0.3 F5000

  {% for i in range(passes) %}
    {% pass = i + 1 %}
    {% set x = x + (i * 0.4) %}
    M118 starting pass {pass} at X{"%0.2f} % (x)}
    G1 X{x} Y20 F5000
    G1 Y{end} F1500 E30
    {% set x = x + 0.4) %}
    M118 pass {pass} returning via X{"%0.2f} % (x)}
    G1 X{x} F5000
    G1 Y20 F1500 E30
  {% endfor %}
  
  G1 X{x+1} Y20 Z2.0 F3000
  G92 E0
  G1 E-1.0 F2400


[gcode_macro ENABLE_FILAMENT_SENSOR]
description: enable ercf filament encoder
variable_skip: False
gcode:

  {% if printer["gcode_macro _ERCF_VAR"].clog_detection|int == 1 %}
    M118 enabling ercf filament encoder...
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1
  {% endif %}

  FILAMENT_SENSOR_STATUS


[gcode_macro DISABLE_FILAMENT_SENSOR]
description: disable ercf filament encoder
gcode:
  
  M118 disabling ercf filament encoder...
  SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

  FILAMENT_SENSOR_STATUS


[gcode_macro FILAMENT_SENSOR_STATUS]
description: ercf sensor status
gcode:
  {% set sensor = printer['filament_motion_sensor encoder_sensor'] %}
  {% if sensor %}
    M118 { "ercf filament encoder enabled: %s, filament: %s" % (sensor.enabled, sensor.filament_detected) }
  {% else %}
    M118 ercf filament encoder not found?
  {% endif %}

  {% set sensor = printer['filament_switch_sensor toolhead_sensor'] %}
  {% if sensor %}
    M118 { "ercf toolhead sensor enabled: %s, filament: %s" % (sensor.enabled, sensor.filament_detected) }
  {% else %}
    M118 ercf toolhead sensor not found?
  {% endif %}


[gcode_macro SKIP_FILAMENT_SENSOR]
description: no-op
gcode:
  M118 SKIP_FILAMENT_SENSOR no-op


[gcode_macro FILAMENT_LOAD]
description: slow load 75mm of filament
gcode:
  _ERCF_SERVO_UP
  _ERCF_MOTORS_OFF
  SAVE_GCODE_STATE NAME=__filament__load
  M83
  G1 E45 F240
  G1 E30 F240
  RESTORE_GCODE_STATE NAME=__filament__load

[gcode_macro FILAMENT_UNLOAD]
description: fast unload 100mm of filament
gcode:
  _ERCF_SERVO_UP
  _ERCF_MOTORS_OFF
  SAVE_GCODE_STATE NAME=__filament__load
  M83
  G1 E-45 F960
  G1 E-45 F960
  G1 E-10 F960
  RESTORE_GCODE_STATE NAME=__filament__load


[gcode_macro ERCF_UNFSCK]
description: unfsck stuff...
gcode:
  _ERCF_SERVO_UP
  _ERCF_MOTORS_OFF
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0


[gcode_macro ERCF_MAKE_FILAMENT_TIP]
gcode:
   _ERCF_FORM_TIP_STANDALONE FINAL_EJECT=1


[gcode_macro ERCF_TEST_ALL]
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=245
  CENTER
  ERCF_HOME
  {% for i in range(9)|reverse %}
    M118 testing toolhead T{i}...
    T{i}
    M83
    G1 E10 F240
  {% endfor %}
  ERCF_HOME

